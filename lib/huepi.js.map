{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap dfa083ebb41909bda0fd","webpack:///./src/huepilightstate.js","webpack:///./src/huepi.js","webpack:///./src/index.js"],"names":["Huepi","require","module","exports","default","on","Hue","Saturation","Brightness","hue","Math","round","sat","bri","Ang","Sat","Bri","SetHSB","Red","Green","Blue","HueAngSatBri","HelperRGBtoHueAngSatBri","SetHueAngSatBri","Ct","ct","Colortemperature","SetCT","HelperColortemperaturetoCT","X","Y","xy","alert","effect","Transitiontime","transitiontime","JSON","stringify","HuepiLightstate","version","LocalBridges","ScanningNetwork","ScanProgress","BridgeIP","BridgeID","Username","BridgeCache","BridgeCacheAutosave","_BridgeCacheLoad","BridgeConfig","BridgeName","Lights","LightIds","Groups","GroupIds","Schedules","Scenes","Sensors","Rules","window","huepiBridgeCache","localStorage","parse","fs","buffer","readFileSync","toString","error","console","log","_BridgeCacheSave","length","internalipaddress","id","toLowerCase","BridgeNr","writeFileSync","LocalIPs","RTCPeerConnection","webkitRTCPeerConnection","mozRTCPeerConnection","PeerConnection","iceServers","createDataChannel","Promise","resolve","reject","onicecandidate","e","candidate","close","LocalIP","exec","indexOf","push","createOffer","sdp","setLocalDescription","Error","IPAddress","Parallel","BridgeGetConfig","then","data","bridgeid","catch","Segment","slice","lastIndexOf","Nr","parseInt","floor","_NetworkCheckIP","IPs","InitialIP","P","_NetworkDiscoverLocalIPs","_NetworkDiscoverLocalBridges","_BridgeCacheSelectFromLocalBridges","fetch","response","json","message","ConfigBridgeIP","ConfigTimeOut","timeout","name","substr","config","lights","key","groups","schedules","scenes","sensors","rules","_BridgeCacheRemoveCurrent","DeviceName","method","success","username","_BridgeCacheAddCurrent","UsernameToDelete","LightNr","LightId","Name","LightGetId","body","State","Get","On","SetTransitiontime","LightSetState","Off","HueAng","Color","HelperHueAngSatBritoRGB","Point","HelperRGBtoXY","all","LightSetBrightness","LightSetXY","x","y","SetHue","SetSaturation","SetBrightness","LightSetHSB","CT","Model","modelid","HelperModelCapableCT","HelperColortemperaturetoRGB","HelperCTtoColortemperature","LightSetCT","HelperModelCapableXY","Gamuted","HelperGamutXYforModel","SetXY","HelperXYtoRGB","HelperRGBtoColortemperature","LightSetColortemperature","AlertSelect","AlertLSelect","AlertNone","EffectColorloop","EffectNone","GroupNr","GroupId","HelperToStringArray","GroupGetId","GroupSetState","GroupSetBrightness","GroupSetXY","GroupSetHSB","GroupSetHueAngSatBri","deferreds","GroupSetCT","ModelType","Min","min","Max","max","Sector","Fraction","p","q","t","Temperature","TestRGB","Epsilon","MinTemperature","MaxTemperature","pow","Z","z","GamutCorrected","Px","Py","PRed","PGreen","PBlue","NormDot","VBR","VRG","VGB","GBR","BRG","RGB","VBP","VRP","VGP","PBR","PRG","PGB","Items","Object","prototype","call","Result","ItemNr","HuepiLightState"],"mappings":"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","file":"huepi.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"huepi\"] = factory();\n\telse\n\t\troot[\"huepi\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap dfa083ebb41909bda0fd","// //////////////////////////////////////////////////////////////////////////////\r\n//\r\n// HuepiLightstate Object\r\n//\r\n//\r\n\r\nvar Huepi = require('./huepi.js');\r\n\r\n/**\r\n * HuepiLightstate Object.\r\n * Internal object to recieve all settings that are about to be send to the Bridge as a string.\r\n *\r\n * @class\r\n */\r\n\r\nmodule.exports =\r\nmodule.exports.default =\r\nclass HuepiLightstate {\r\n  constructor() { };\r\n  // /** */\r\n  // //SetOn(On) {\r\n  //  on = On;\r\n  // };\r\n  /** */\r\n  On() {\r\n    this.on = true;\r\n    return this;\r\n  };\r\n  /** */\r\n  Off() {\r\n    this.on = false;\r\n    return this;\r\n  };\r\n  /*\r\n   * @param {number} Hue Range [0..65535]\r\n   * @param {float} Saturation Range [0..255]\r\n   * @param {float} Brightness Range [0..255]\r\n   */\r\n  SetHSB(Hue, Saturation, Brightness) { // Range 65535, 255, 255\r\n    this.hue = Math.round(Hue);\r\n    this.sat = Math.round(Saturation);\r\n    this.bri = Math.round(Brightness);\r\n    return this;\r\n  };\r\n  /**\r\n   * @param {number} Hue Range [0..65535]\r\n   */\r\n  SetHue(Hue) {\r\n    this.hue = Math.round(Hue);\r\n    return this;\r\n  };\r\n  /**\r\n   * @param {float} Saturation Range [0..255]\r\n   */\r\n  SetSaturation(Saturation) {\r\n    this.sat = Math.round(Saturation);\r\n    return this;\r\n  };\r\n  /**\r\n   * @param {float} Brightness Range [0..255]\r\n   */\r\n  SetBrightness(Brightness) {\r\n    this.bri = Math.round(Brightness);\r\n    return this;\r\n  };\r\n  /**\r\n   * @param {float} Ang Range [0..360]\r\n   * @param {float} Sat Range [0..1]\r\n   * @param {float} Bri Range [0..1]\r\n   */\r\n  SetHueAngSatBri(Ang, Sat, Bri) {\r\n    // In: Hue in Deg, Saturation, Brightness 0.0-1.0 Transform To Philips Hue Range...\r\n    while (Ang < 0) {\r\n      Ang = Ang + 360;\r\n    }\r\n    Ang = Ang % 360;\r\n    return this.SetHSB(Math.round(Ang / 360 * 65535), Math.round(Sat * 255), Math.round(Bri * 255));\r\n  };\r\n  /**\r\n   * @param {number} Red Range [0..1]\r\n   * @param {number} Green Range [0..1]\r\n   * @param {number} Blue Range [0..1]\r\n   */\r\n  SetRGB(Red, Green, Blue) {\r\n    var HueAngSatBri;\r\n\r\n    HueAngSatBri = Huepi.HelperRGBtoHueAngSatBri(Red, Green, Blue);\r\n    return this.SetHueAngSatBri(HueAngSatBri.Ang, HueAngSatBri.Sat, HueAngSatBri.Bri);\r\n  };\r\n  /**\r\n   * @param {number} Ct Micro Reciprocal Degree of Colortemperature (Ct = 10^6 / Colortemperature)\r\n   */\r\n  SetCT(Ct) {\r\n    this.ct = Math.round(Ct);\r\n    return this;\r\n  };\r\n  /**\r\n   * @param {number} Colortemperature Range [2200..6500] for the 2012 lights\r\n   */\r\n  SetColortemperature(Colortemperature) {\r\n    return this.SetCT(Huepi.HelperColortemperaturetoCT(Colortemperature));\r\n  };\r\n  /**\r\n   * @param {float} X\r\n   * @param {float} Y\r\n   */\r\n  SetXY(X, Y) {\r\n    this.xy = [X, Y];\r\n    return this;\r\n  };\r\n  // /** */\r\n  // SetAlert(Alert) {\r\n  //   alert = Alert;\r\n  // };\r\n  /** */\r\n  AlertSelect() {\r\n    this.alert = 'select';\r\n    return this;\r\n  };\r\n  /** */\r\n  AlertLSelect() {\r\n    this.alert = 'lselect';\r\n    return this;\r\n  };\r\n  /** */\r\n  AlertNone() {\r\n    this.alert = 'none';\r\n    return this;\r\n  };\r\n  // /** */\r\n  // SetEffect(Effect) {\r\n  //   effect = Effect;\r\n  // };\r\n  /** */\r\n  EffectColorloop() {\r\n    this.effect = 'colorloop';\r\n    return this;\r\n  };\r\n  /** */\r\n  EffectNone() {\r\n    this.effect = 'none';\r\n    return this;\r\n  };\r\n  /**\r\n   * @param {number} Transitiontime Optional Transitiontime in multiple of 100ms\r\n   *  defaults to 4 (on bridge, meaning 400 ms)\r\n   */\r\n  SetTransitiontime(Transitiontime) {\r\n    if (typeof Transitiontime !== 'undefined') { // Optional Parameter\r\n      this.transitiontime = Transitiontime;\r\n    }\r\n    return this;\r\n  };\r\n  /**\r\n   * @returns {string} Stringified version of the content of LightState ready to be sent to the Bridge.\r\n   */\r\n  Get() {\r\n    return JSON.stringify(this);\r\n  };\r\n\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/huepilightstate.js","// //////////////////////////////////////////////////////////////////////////////\r\n//\r\n// hue (Philips Wireless Lighting) Api interface for JavaScript\r\n//  +-> HUEPI sounds like Joepie which makes me smile during development...\r\n//\r\n// Requires fetch for http calls and uses regular modern Promisses\r\n//\r\n// //////////////////////////////////////////////////////////////////////////////\r\n\r\nvar HuepiLightstate = require('./huepilightstate.js');\r\n\r\n/**\r\n * huepi Object, Entry point for all interaction with Lights etc via the Bridge.\r\n *\r\n * @class\r\n * @alias huepi\r\n */\r\nmodule.exports =\r\nmodule.exports.default =\r\nclass Huepi {\r\n  constructor() {\r\n    /** @member {string} - version of the huepi interface */\r\n    this.version = '1.5.0';\r\n\r\n    /** @member {array} - Array of all Bridges on the local network */\r\n    this.LocalBridges = [];\r\n\r\n    /** @member {bool} - get: local network scan in progress / set:proceed with scan */\r\n    this.ScanningNetwork = false;\r\n    /** @member {number} - local network scan progress in % */\r\n    this.ScanProgress = 0;\r\n\r\n    /** @member {string} - IP address of the Current(active) Bridge */\r\n    this.BridgeIP = '';\r\n    /** @member {string} - ID (Unique, is MAC address) of the Current(active) Bridge */\r\n    this.BridgeID = '';\r\n    /** @member {string} - Username for Whitelisting, generated by the Bridge */\r\n    this.Username = '';\r\n\r\n    /** @member {object} - Cache Hashmap of huepi BridgeID and Whitelisted Username */\r\n    this.BridgeCache = {};\r\n    /** @member {boolean} - Autosave Cache Hasmap of huepi BridgeID and Whitelisted Username */\r\n    this.BridgeCacheAutosave = true;\r\n    this._BridgeCacheLoad(); // Load BridgeCache on creation by Default\r\n\r\n    /** @member {object} - Configuration of the Current(active) Bridge */\r\n    this.BridgeConfig = {};\r\n    /** @member {string} - Name of the Current(active) Bridge */\r\n    this.BridgeName = '';\r\n\r\n    /** @member {array} - Array of all Lights of the Current(active) Bridge */\r\n    this.Lights = [];\r\n    /** @member {array} - Array of all LightIds of the Current(active) Bridge */\r\n    this.LightIds = [];\r\n\r\n    /** @member {array} - Array of all Groups of the Current(active) Bridge */\r\n    this.Groups = [];\r\n    /** @member {array} - Array of all GroupIds of the Current(active) Bridge */\r\n    this.GroupIds = [];\r\n\r\n    // To Do: Add Schedules, Scenes, Sensors & Rules manupulation functions, they are read only for now\r\n    /** @member {array} - Array of all Schedules of the Current(active) Bridge,\r\n     * NOTE: There are no Setter functions yet */\r\n    this.Schedules = [];\r\n    /** @member {array} - Array of all Scenes of the Current(active) Bridge,\r\n     * NOTE: There are no Setter functions yet */\r\n    this.Scenes = [];\r\n    /** @member {array} - Array of all Sensors of the Current(active) Bridge,\r\n     * NOTE: There are no Setter functions yet */\r\n    this.Sensors = [];\r\n    /** @member {array} - Array of all Rules of the Current(active) Bridge,\r\n     * NOTE: There are no Setter functions yet */\r\n    this.Rules = [];\r\n  };\r\n\r\n  // //////////////////////////////////////////////////////////////////////////////\r\n  //\r\n  // Private _BridgeCache Functions, Internal Used\r\n  //\r\n  //\r\n\r\n  /**\r\n   * Loads the BridgeCache, typically on startup\r\n   */\r\n  _BridgeCacheLoad() {\r\n    this.BridgeCache = {};\r\n    try {\r\n      if (typeof window !== 'undefined') {\r\n        let huepiBridgeCache = localStorage.huepiBridgeCache || '{}';\r\n\r\n        this.BridgeCache = JSON.parse(huepiBridgeCache); // Load\r\n      } else if (typeof module !== 'undefined' && module.exports) {\r\n        let fs = require('fs');\r\n        let buffer = fs.readFileSync('huepiBridgeCache.json');\r\n\r\n        this.BridgeCache = JSON.parse(buffer.toString());\r\n      }\r\n      // console.log('_BridgeCacheLoad()-ed : \\n '+ JSON.stringify(this.BridgeCache));\r\n    } catch (error) {\r\n      console.log('Unable to _BridgeCacheLoad() ' + error);\r\n    }\r\n  };\r\n\r\n  _BridgeCacheAddCurrent() {\r\n    console.log('_BridgeCacheAddCurrent ' + this.BridgeID + ' ' + this.Username);\r\n    this.BridgeCache[this.BridgeID] = this.Username;\r\n    if (this.BridgeCacheAutosave) {\r\n      this._BridgeCacheSave();\r\n    }\r\n  };\r\n\r\n  _BridgeCacheRemoveCurrent() {\r\n    if (this.BridgeCache[this.BridgeID] === this.Username) {\r\n      console.log('_BridgeCacheRemoveCurrent ' + this.BridgeID + ' ' + this.Username);\r\n      delete this.BridgeCache[this.BridgeID];\r\n      if (this.BridgeCacheAutosave) {\r\n        this._BridgeCacheSave();\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Selects the first Bridge from LocalBridges found in BridgeCache and stores in BridgeIP\r\n   *  defaults to 1st Bridge in LocalBridges if no bridge from LocalBridges is found in BridgeCache\r\n   *\r\n   * Internally called in PortalDiscoverLocalBridges and NetworkDiscoverLocalBridges\r\n   */\r\n  _BridgeCacheSelectFromLocalBridges() {\r\n    if (this.LocalBridges.length > 0) { // Local Bridges are found\r\n      this.BridgeIP = this.LocalBridges[0].internalipaddress || ''; // Default to 1st Bridge Found\r\n      this.BridgeID = this.LocalBridges[0].id.toLowerCase() || '';\r\n      if (!this.BridgeCache[this.BridgeID]) { // if this.BridgeID not found in BridgeCache\r\n        for (let BridgeNr = 1; BridgeNr < this.LocalBridges.length; BridgeNr++) { // Search and store Found\r\n          this.BridgeID = this.LocalBridges[BridgeNr].id.toLowerCase();\r\n          if (this.BridgeCache[this.BridgeID]) {\r\n            this.BridgeIP = this.LocalBridges[BridgeNr].internalipaddress;\r\n            break;\r\n          } else {\r\n            this.BridgeID = '';\r\n          }\r\n        }\r\n      }\r\n    }\r\n    this.Username = this.BridgeCache[this.BridgeID] || '';\r\n  };\r\n\r\n  /**\r\n   * Saves the BridgeCache, typically on Whitelist new Device or Device no longer whitelisted\r\n   *   as is the case with with @BridgeCacheAutosave on @_BridgeCacheAddCurrent and @_BridgeCacheRemoveCurrent\r\n   * NOTE: Saving this cache might be considered a security issue\r\n   * To counter this security issue, arrange your own load/save code with proper encryption\r\n   */\r\n  _BridgeCacheSave() {\r\n    try {\r\n      if (typeof window !== 'undefined') {\r\n        localStorage.huepiBridgeCache = JSON.stringify(this.BridgeCache); // Save\r\n      } else if (typeof module !== 'undefined' && module.exports) {\r\n        let fs = require('fs');\r\n\r\n        fs.writeFileSync('huepiBridgeCache.json', JSON.stringify(this.BridgeCache));\r\n      }\r\n      // console.log('_BridgeCacheSave()-ed  : \\n '+ JSON.stringify(this.BridgeCache));\r\n    } catch (error) {\r\n      console.log('Unable to _BridgeCacheSave() ' + error);\r\n    }\r\n  };\r\n\r\n  // //////////////////////////////////////////////////////////////////////////////\r\n  //\r\n  // Network Functions\r\n  //\r\n  //\r\n\r\n  /**\r\n   *\r\n   */\r\n  _NetworkDiscoverLocalIPs() { // resolves LocalIPs[]\r\n    let LocalIPs = [];\r\n    let RTCPeerConnection = window.RTCPeerConnection || window.webkitRTCPeerConnection || window.mozRTCPeerConnection;\r\n    let PeerConnection = new RTCPeerConnection({ iceServers: [] });\r\n\r\n    PeerConnection.createDataChannel('');\r\n\r\n    return new Promise((resolve, reject) => {\r\n      PeerConnection.onicecandidate = (e) => {\r\n        if (!e.candidate) {\r\n          PeerConnection.close();\r\n          return resolve(LocalIPs);\r\n        }\r\n        let LocalIP = /^candidate:.+ (\\S+) \\d+ typ/.exec(e.candidate.candidate)[1];\r\n\r\n        if (LocalIPs.indexOf(LocalIP) === -1) {\r\n          LocalIPs.push(LocalIP);\r\n        }\r\n        return LocalIPs;\r\n      };\r\n      PeerConnection.createOffer((sdp) => {\r\n        PeerConnection.setLocalDescription(sdp);\r\n      }, (Error) => { });\r\n    });\r\n  }\r\n\r\n  /**\r\n   *\r\n   */\r\n  _NetworkCheckIP(IPAddress) {\r\n    let Parallel = 16;\r\n\r\n    this.BridgeGetConfig(IPAddress, 3000).then((data) => {\r\n      this.LocalBridges.push({ 'internalipaddress': IPAddress, 'id': data.bridgeid.toLowerCase() });\r\n    })\r\n      .then(() => { }).catch(() => { }) // next .then is .always called\r\n      .then(() => {\r\n        let Segment = IPAddress.slice(0, IPAddress.lastIndexOf('.') + 1);\r\n        let Nr = parseInt(IPAddress.slice(IPAddress.lastIndexOf('.') + 1, IPAddress.length), 10);\r\n\r\n        this.ScanProgress = (Math.floor(100 * Nr / 255));\r\n        // console.log('huepi scanning ',this.ScanProgress,'% done');\r\n        if (this.ScanningNetwork === false) {\r\n          Nr = 256; // Stop scanning if (this.ScanningNetwork = false)\r\n        }\r\n        if ((Nr + Parallel) < 256) {\r\n          this._NetworkCheckIP(Segment + (Nr + Parallel));\r\n        } else {\r\n          this.ScanningNetwork = false;\r\n        }\r\n      });\r\n  }\r\n\r\n  /**\r\n   *\r\n   */\r\n  _NetworkDiscoverLocalBridges(LocalIPs) {\r\n    let Parallel = 16;\r\n\r\n    this.ScanProgress = 0;\r\n    return new Promise((resolve, reject) => {\r\n      for (let IPs = 0; IPs < LocalIPs.length; IPs++) {\r\n        let InitialIP = LocalIPs[IPs].slice(0, LocalIPs[IPs].lastIndexOf('.') + 1);\r\n\r\n        for (let P = 1; P <= Parallel; P++) {\r\n          this._NetworkCheckIP(InitialIP + P);\r\n        }\r\n        resolve();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Creates the list of hue-Bridges on the local network\r\n   */\r\n  NetworkDiscoverLocalBridges() {\r\n    this.ScanningNetwork = true;\r\n    this.BridgeIP =\r\n      this.BridgeID =\r\n      this.BridgeName =\r\n      this.Username = '';\r\n    this.LocalBridges = [];\r\n\r\n    return new Promise((resolve, reject) => {\r\n      this._NetworkDiscoverLocalIPs().then((LocalIPs) => {\r\n        this._NetworkDiscoverLocalBridges(LocalIPs).then(() => {\r\n          if (this.LocalBridges.length > 0) {\r\n            this._BridgeCacheSelectFromLocalBridges();\r\n            resolve();\r\n          } else {\r\n            reject();\r\n          }\r\n        });\r\n      });\r\n    });\r\n  };\r\n\r\n  // //////////////////////////////////////////////////////////////////////////////\r\n  //\r\n  // Portal Functions\r\n  //\r\n  //\r\n\r\n  /**\r\n   * Retreives the list of hue-Bridges on the local network from the hue Portal\r\n   */\r\n  PortalDiscoverLocalBridges() {\r\n    this.BridgeIP =\r\n      this.BridgeID =\r\n      this.BridgeName =\r\n      this.Username = '';\r\n    this.LocalBridges = [];\r\n    return new Promise((resolve, reject) => {\r\n      fetch('https://www.meethue.com/api/nupnp').then((response) => {\r\n        return response.json();\r\n      }).then((data) => {\r\n        if (data.length > 0) {\r\n          if (data[0].internalipaddress) { // Bridge(s) Discovered\r\n            this.LocalBridges = data;\r\n            this._BridgeCacheSelectFromLocalBridges();\r\n            resolve(data);\r\n          } else {\r\n            reject('No Bridges found via Portal');\r\n          }\r\n        } else {\r\n          reject(data);\r\n        }\r\n      }).catch(function (message) { // fetch failed\r\n        reject(message);\r\n      });\r\n    });\r\n  }\r\n\r\n  // //////////////////////////////////////////////////////////////////////////////\r\n  //\r\n  //  Bridge Functions\r\n  //\r\n  //\r\n\r\n  /**\r\n   * Function to retreive BridgeConfig before Checking Whitelisting.\r\n   * ONCE call BridgeGetConfig Before BridgeGetData to validate we are talking to a hue Bridge\r\n   * available members (as of 'apiversion': '1.11.0'):\r\n   *   name, apiversion, swversion, mac, bridgeid, replacesbridgeid, factorynew, modelid\r\n   *\r\n   * @param {string} ConfigBridgeIP - Optional BridgeIP to GetConfig from, otherwise uses BridgeIP (this).\r\n   * @param {string} ConfigTimeOut - Optional TimeOut for network request, otherwise uses 60 seconds.\r\n   */\r\n  BridgeGetConfig(ConfigBridgeIP, ConfigTimeOut) { // GET /api/config -> data.config.whitelist.username\r\n    ConfigBridgeIP = ConfigBridgeIP || this.BridgeIP;\r\n    ConfigTimeOut = ConfigTimeOut || 60000;\r\n\r\n    return new Promise((resolve, reject) => {\r\n      fetch('http://' + ConfigBridgeIP + '/api/config/', { timeout: ConfigTimeOut }).then((response) => {\r\n        return response.json();\r\n      }).then((data) => {\r\n        if (data.bridgeid) {\r\n          if (this.BridgeIP === ConfigBridgeIP) {\r\n            this.BridgeConfig = data;\r\n            if (this.BridgeConfig.bridgeid) { // SteveyO/Hue-Emulator doesn't supply bridgeid as of yet.\r\n              this.BridgeID = this.BridgeConfig.bridgeid.toLowerCase();\r\n            } else {\r\n              this.BridgeID = '';\r\n            }\r\n            this.BridgeName = this.BridgeConfig.name;\r\n            this.Username = this.BridgeCache[this.BridgeID];\r\n            if (typeof this.Username === 'undefined') {\r\n              this.Username = '';\r\n            }\r\n          }\r\n          resolve(data);\r\n        } else { // this BridgeIP is not a hue Bridge\r\n          reject('this BridgeIP is not a hue Bridge');\r\n        }\r\n      }).catch(function (message) { // fetch failed\r\n        reject(message);\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Function to retreive BridgeDescription before Checking Whitelisting.\r\n   * ONCE call BridgeGetDescription Before BridgeGetData to validate we are talking to a hue Bridge\r\n   *\r\n   * REMARK: Needs a fix of the hue bridge to allow CORS on xml endpoint too,\r\n   *  just like on json endpoints already is implemented.\r\n   *\r\n   * @param {string} ConfigBridgeIP - Optional BridgeIP to GetConfig from, otherwise uses BridgeIP (this).\r\n   * @param {string} ConfigTimeOut - Optional TimeOut for network request, otherwise uses 60 seconds.\r\n   */\r\n  BridgeGetDescription(ConfigBridgeIP, ConfigTimeOut) { // GET /description.xml -> /device/serialNumber\r\n    ConfigBridgeIP = ConfigBridgeIP || this.BridgeIP;\r\n    ConfigTimeOut = ConfigTimeOut || 60000;\r\n\r\n    return new Promise((resolve, reject) => {\r\n      fetch('http://' + ConfigBridgeIP + '/description.xml', { timeout: ConfigTimeOut }).then((response) => {\r\n        return response.json();\r\n      }).then((data) => {\r\n        if (data.indexOf('hue_logo_0.png') > 0) {\r\n          if (data.indexOf('<serialNumber>') > 0) {\r\n            this.BridgeID = data.substr(14 + data.indexOf('<serialNumber>'),\r\n             data.indexOf('</serialNumber>') - data.indexOf('<serialNumber>') - 14).toLowerCase();\r\n          }\r\n          if (data.indexOf('<friendlyName>') > 0) {\r\n            this.BridgeName = data.substr(14 + data.indexOf('<friendlyName>'),\r\n             data.indexOf('</friendlyName>') - data.indexOf('<friendlyName>') - 14);\r\n          }\r\n          this.Username = this.BridgeCache[this.BridgeID];\r\n          if (typeof this.Username === 'undefined') {\r\n            // Correct 001788[....]200xxx -> 001788FFFE200XXX short and long serialnumer difference\r\n            this.BridgeID = this.BridgeID.slice(0, 6) + 'fffe' + this.BridgeID.slice(6, 12);\r\n            this.Username = this.BridgeCache[this.BridgeID];\r\n            if (typeof this.Username === 'undefined') {\r\n              this.Username = '';\r\n            }\r\n          }\r\n          resolve(data);\r\n        } else { // this BridgeIP is not a hue Bridge\r\n          reject('this BridgeIP is not a hue Bridge');\r\n        }\r\n      }).catch(function (message) { // fetch failed\r\n        reject(message);\r\n      });\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Update function to retreive Bridge data and store it in this object.\r\n   * Consider this the main 'Get' function.\r\n   * Typically used for Heartbeat or manual updates of local data.\r\n   */\r\n  BridgeGetData() { // GET /api/username -> data.config.whitelist.username\r\n    return new Promise((resolve, reject) => {\r\n      if (this.Username === '') {\r\n        reject('Username must be set before calling BridgeGetData');\r\n      } else {\r\n        fetch('http://' + this.BridgeIP + '/api/' + this.Username).then((response) => {\r\n          return response.json();\r\n        }).then((data) => {\r\n          if (typeof data.config !== 'undefined') { // if able to read Config, Username must be Whitelisted\r\n            this.BridgeConfig = data.config;\r\n            if (this.BridgeConfig.bridgeid) { // SteveyO/Hue-Emulator doesn't supply bridgeid as of yet.\r\n              this.BridgeID = this.BridgeConfig.bridgeid.toLowerCase();\r\n            } else {\r\n              this.BridgeID = '';\r\n            }\r\n            this.BridgeName = this.BridgeConfig.name;\r\n            this.Lights = data.lights;\r\n            this.LightIds = [];\r\n            for (let key in this.Lights) {\r\n              this.LightIds.push(key);\r\n            }\r\n            this.Groups = data.groups;\r\n            this.GroupIds = [];\r\n            for (let key in this.Groups) {\r\n              this.GroupIds.push(key);\r\n            }\r\n            this.Schedules = data.schedules;\r\n            this.Scenes = data.scenes;\r\n            this.Sensors = data.sensors;\r\n            this.Rules = data.rules;\r\n            this.BridgeName = this.BridgeConfig.name;\r\n            resolve(data);\r\n          } else { // Username is no longer whitelisted\r\n            if (this.Username !== '') {\r\n              this._BridgeCacheRemoveCurrent();\r\n            }\r\n            this.Username = '';\r\n            reject('Username is no longer whitelisted');\r\n          }\r\n        }).catch(function (message) { // fetch failed\r\n          reject(message);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Whitelists the Username stored in this object.\r\n   * Note: a buttonpress on the bridge is requered max 30 sec before this to succeed.\r\n   * please only use this once per device, Username is stored in cache.\r\n   *\r\n   * @param {string} DeviceName - Optional device name to Whitelist.\r\n   */\r\n  BridgeCreateUser(DeviceName) {\r\n  // POST /api {'devicetype': 'AppName#DeviceName' }\r\n    DeviceName = DeviceName || 'WebInterface';\r\n\r\n    return new Promise((resolve, reject) => {\r\n      fetch('http://' + this.BridgeIP + '/api', '{\"devicetype\": \"huepi#' + DeviceName + '\"}',\r\n      { method: 'POST' }).then((response) => {\r\n        return response.json();\r\n      }).then((data) => {\r\n        if ((data[0]) && (data[0].success)) {\r\n          this.Username = data[0].success.username;\r\n          this._BridgeCacheAddCurrent();\r\n          resolve(data);\r\n        } else {\r\n          reject(data);\r\n        }\r\n      }).catch(function (message) { // fetch failed\r\n        reject(message);\r\n      });\r\n    });\r\n  };\r\n\r\n  /**\r\n   * @param {string} UsernameToDelete - Username that will be revoked from the Whitelist.\r\n   * Note: Username stored in this object need to be Whitelisted to succeed.\r\n   */\r\n  BridgeDeleteUser(UsernameToDelete) {\r\n  // DELETE /api/username/config/whitelist/username {'devicetype': 'iPhone', 'username': '1234567890'}\r\n    return fetch('http://' + this.BridgeIP + '/api/' + this.Username + '/config/whitelist/' + UsernameToDelete,\r\n      { method: 'DELETE' });\r\n  };\r\n\r\n  // //////////////////////////////////////////////////////////////////////////////\r\n  //\r\n  //  Huepi.Helper Functions\r\n  //\r\n  //\r\n\r\n  /**\r\n   * @param {string} Model\r\n   * @returns {boolean} Model is capable of CT\r\n   */\r\n  static HelperModelCapableCT(Model) { // CT Capable\tLCT* LLM* LTW* LLC020 LST002\r\n    let ModelType = Model.slice(0, 3);\r\n\r\n    return ((ModelType === 'LCT') || (ModelType === 'LLM') || (ModelType === 'LTW') ||\r\n    (Model === 'LLC020') || (Model === 'LST002'));\r\n  };\r\n\r\n  /**\r\n  * @param {string} Model\r\n  * @returns {boolean} Model is capable of XY\r\n  */\r\n  static HelperModelCapableXY(Model) { // XY Capable\tLCT* LLC* LST* LLM001 LLC020 LST002\r\n    let ModelType = Model.slice(0, 3);\r\n\r\n    return ((ModelType === 'LCT') || (ModelType === 'LLC') || (ModelType === 'LST') ||\r\n    (Model === 'LLM001') || (Model === 'LLC020') || (Model === 'LST002'));\r\n  };\r\n\r\n  /**\r\n   * @param {float} Red - Range [0..1]\r\n   * @param {float} Green - Range [0..1]\r\n   * @param {float} Blue - Range [0..1]\r\n   * @returns {object} [Ang, Sat, Bri] - Ranges [0..360] [0..1] [0..1]\r\n   */\r\n  static HelperRGBtoHueAngSatBri(Red, Green, Blue) {\r\n    let Ang, Sat, Bri;\r\n    let Min = Math.min(Red, Green, Blue);\r\n    let Max = Math.max(Red, Green, Blue);\r\n\r\n    if (Min !== Max) {\r\n      if (Red === Max) {\r\n        Ang = (0 + ((Green - Blue) / (Max - Min))) * 60;\r\n      } else if (Green === Max) {\r\n        Ang = (2 + ((Blue - Red) / (Max - Min))) * 60;\r\n      } else {\r\n        Ang = (4 + ((Red - Green) / (Max - Min))) * 60;\r\n      }\r\n      Sat = (Max - Min) / Max;\r\n      Bri = Max;\r\n    } else { // Max === Min\r\n      Ang = 0;\r\n      Sat = 0;\r\n      Bri = Max;\r\n    }\r\n    return { Ang: Ang, Sat: Sat, Bri: Bri };\r\n  };\r\n\r\n  /**\r\n   * @param {float} Ang - Range [0..360]\r\n   * @param {float} Sat - Range [0..1]\r\n   * @param {float} Bri - Range [0..1]\r\n   * @returns {object} [Red, Green, Blue] - Ranges [0..1] [0..1] [0..1]\r\n   */\r\n  static HelperHueAngSatBritoRGB(Ang, Sat, Bri) { // Range 360, 1, 1, return .Red, .Green, .Blue\r\n    let Red, Green, Blue;\r\n\r\n    if (Sat === 0) {\r\n      Red = Bri;\r\n      Green = Bri;\r\n      Blue = Bri;\r\n    } else {\r\n      let Sector = Math.floor(Ang / 60) % 6;\r\n      let Fraction = (Ang / 60) - Sector;\r\n      let p = Bri * (1 - Sat);\r\n      let q = Bri * (1 - Sat * Fraction);\r\n      let t = Bri * (1 - Sat * (1 - Fraction));\r\n\r\n      switch (Sector) {\r\n        case 0:\r\n          Red = Bri;\r\n          Green = t;\r\n          Blue = p;\r\n          break;\r\n        case 1:\r\n          Red = q;\r\n          Green = Bri;\r\n          Blue = p;\r\n          break;\r\n        case 2:\r\n          Red = p;\r\n          Green = Bri;\r\n          Blue = t;\r\n          break;\r\n        case 3:\r\n          Red = p;\r\n          Green = q;\r\n          Blue = Bri;\r\n          break;\r\n        case 4:\r\n          Red = t;\r\n          Green = p;\r\n          Blue = Bri;\r\n          break;\r\n        default: // case 5:\r\n          Red = Bri;\r\n          Green = p;\r\n          Blue = q;\r\n          break;\r\n      }\r\n    }\r\n    return { Red: Red, Green: Green, Blue: Blue };\r\n  };\r\n\r\n  /**\r\n   * @param {float} Red - Range [0..1]\r\n   * @param {float} Green - Range [0..1]\r\n   * @param {float} Blue - Range [0..1]\r\n   * @returns {number} Temperature ranges [2200..6500]\r\n   */\r\n  static HelperRGBtoColortemperature(Red, Green, Blue) {\r\n  // Approximation from https://github.com/neilbartlett/color-temperature/blob/master/index.js\r\n    let Temperature;\r\n    let TestRGB;\r\n    let Epsilon = 0.4;\r\n    let MinTemperature = 2200;\r\n    let MaxTemperature = 6500;\r\n\r\n    while ((MaxTemperature - MinTemperature) > Epsilon) {\r\n      Temperature = (MaxTemperature + MinTemperature) / 2;\r\n      TestRGB = Huepi.HelperColortemperaturetoRGB(Temperature);\r\n      if ((TestRGB.Blue / TestRGB.Red) >= (Blue / Red)) {\r\n        MaxTemperature = Temperature;\r\n      } else {\r\n        MinTemperature = Temperature;\r\n      }\r\n    }\r\n    return Math.round(Temperature);\r\n  };\r\n\r\n  /**\r\n   * @param {number} Temperature ranges [1000..6600]\r\n   * @returns {object} [Red, Green, Blue] ranges [0..1] [0..1] [0..1]\r\n   */\r\n  static HelperColortemperaturetoRGB(Temperature) {\r\n  // http://www.tannerhelland.com/4435/convert-temperature-rgb-algorithm-code/\r\n  // Update Available: https://github.com/neilbartlett/color-temperature/blob/master/index.js\r\n    let Red, Green, Blue;\r\n\r\n    Temperature = Temperature / 100;\r\n    if (Temperature <= 66) {\r\n      Red = /* 255; */ 165 + 90 * ((Temperature) / (66));\r\n    } else {\r\n      Red = Temperature - 60;\r\n      Red = 329.698727466 * Math.pow(Red, -0.1332047592);\r\n      if (Red < 0) {\r\n        Red = 0;\r\n      }\r\n      if (Red > 255) {\r\n        Red = 255;\r\n      }\r\n    }\r\n    if (Temperature <= 66) {\r\n      Green = Temperature;\r\n      Green = 99.4708025861 * Math.log(Green) - 161.1195681661;\r\n      if (Green < 0) {\r\n        Green = 0;\r\n      }\r\n      if (Green > 255) {\r\n        Green = 255;\r\n      }\r\n    } else {\r\n      Green = Temperature - 60;\r\n      Green = 288.1221695283 * Math.pow(Green, -0.0755148492);\r\n      if (Green < 0) {\r\n        Green = 0;\r\n      }\r\n      if (Green > 255) {\r\n        Green = 255;\r\n      }\r\n    }\r\n    if (Temperature >= 66) {\r\n      Blue = 255;\r\n    } else {\r\n      if (Temperature <= 19) {\r\n        Blue = 0;\r\n      } else {\r\n        Blue = Temperature - 10;\r\n        Blue = 138.5177312231 * Math.log(Blue) - 305.0447927307;\r\n        if (Blue < 0) {\r\n          Blue = 0;\r\n        }\r\n        if (Blue > 255) {\r\n          Blue = 255;\r\n        }\r\n      }\r\n    }\r\n    return { Red: Red / 255, Green: Green / 255, Blue: Blue / 255 };\r\n  };\r\n\r\n  /**\r\n   * @param {float} Red - Range [0..1]\r\n   * @param {float} Green - Range [0..1]\r\n   * @param {float} Blue - Range [0..1]\r\n   * @returns {object} [x, y] - Ranges [0..1] [0..1]\r\n   */\r\n  static HelperRGBtoXY(Red, Green, Blue) {\r\n  // Source: https://github.com/PhilipsHue/PhilipsHueSDK-iOS-OSX/blob/master/\r\n  // ApplicationDesignNotes/RGB%20to%20xy%20Color%20conversion.md\r\n    // Apply gamma correction\r\n    if (Red > 0.04045) {\r\n      Red = Math.pow((Red + 0.055) / (1.055), 2.4);\r\n    } else {\r\n      Red = Red / 12.92;\r\n    }\r\n    if (Green > 0.04045) {\r\n      Green = Math.pow((Green + 0.055) / (1.055), 2.4);\r\n    } else {\r\n      Green = Green / 12.92;\r\n    }\r\n    if (Blue > 0.04045) {\r\n      Blue = Math.pow((Blue + 0.055) / (1.055), 2.4);\r\n    } else {\r\n      Blue = Blue / 12.92;\r\n    }\r\n    // RGB to XYZ [M] for Wide RGB D65, http://www.developers.meethue.com/documentation/color-conversions-rgb-xy\r\n    let X = Red * 0.664511 + Green * 0.154324 + Blue * 0.162028;\r\n    let Y = Red * 0.283881 + Green * 0.668433 + Blue * 0.047685;\r\n    let Z = Red * 0.000088 + Green * 0.072310 + Blue * 0.986039;\r\n\r\n    // But we don't want Capital X,Y,Z you want lowercase [x,y] (called the color point) as per:\r\n    if ((X + Y + Z) === 0) {\r\n      return { x: 0, y: 0 };\r\n    }\r\n    return { x: X / (X + Y + Z), y: Y / (X + Y + Z) };\r\n  };\r\n\r\n  /**\r\n   * @param {float} x\r\n   * @param {float} y\r\n   * @param {float} Brightness Optional\r\n   * @returns {object} [Red, Green, Blue] - Ranges [0..1] [0..1] [0..1]\r\n   */\r\n  static HelperXYtoRGB(x, y, Brightness) {\r\n  // Source: https://github.com/PhilipsHue/PhilipsHueSDK-iOS-OSX/blob/master/\r\n  // ApplicationDesignNotes/RGB%20to%20xy%20Color%20conversion.md\r\n    Brightness = Brightness || 1.0; // Default full brightness\r\n    let z = 1.0 - x - y;\r\n    let Y = Brightness;\r\n    let X = (Y / y) * x;\r\n    let Z = (Y / y) * z;\r\n    // XYZ to RGB [M]-1 for Wide RGB D65, http://www.developers.meethue.com/documentation/color-conversions-rgb-xy\r\n    let Red = X * 1.656492 - Y * 0.354851 - Z * 0.255038;\r\n    let Green = -X * 0.707196 + Y * 1.655397 + Z * 0.036152;\r\n    let Blue = X * 0.051713 - Y * 0.121364 + Z * 1.011530;\r\n\r\n    // Limit RGB on [0..1]\r\n    if (Red > Blue && Red > Green && Red > 1.0) { // Red is too big\r\n      Green = Green / Red;\r\n      Blue = Blue / Red;\r\n      Red = 1.0;\r\n    }\r\n    if (Red < 0) {\r\n      Red = 0;\r\n    }\r\n    if (Green > Blue && Green > Red && Green > 1.0) { // Green is too big\r\n      Red = Red / Green;\r\n      Blue = Blue / Green;\r\n      Green = 1.0;\r\n    }\r\n    if (Green < 0) {\r\n      Green = 0;\r\n    }\r\n    if (Blue > Red && Blue > Green && Blue > 1.0) { // Blue is too big\r\n      Red = Red / Blue;\r\n      Green = Green / Blue;\r\n      Blue = 1.0;\r\n    }\r\n    if (Blue < 0) {\r\n      Blue = 0;\r\n    }\r\n    // Apply reverse gamma correction\r\n    if (Red <= 0.0031308) {\r\n      Red = Red * 12.92;\r\n    } else {\r\n      Red = 1.055 * Math.pow(Red, (1.0 / 2.4)) - 0.055;\r\n    }\r\n    if (Green <= 0.0031308) {\r\n      Green = Green * 12.92;\r\n    } else {\r\n      Green = 1.055 * Math.pow(Green, (1.0 / 2.4)) - 0.055;\r\n    }\r\n    if (Blue <= 0.0031308) {\r\n      Blue = Blue * 12.92;\r\n    } else {\r\n      Blue = 1.055 * Math.pow(Blue, (1.0 / 2.4)) - 0.055;\r\n    }\r\n    // Limit RGB on [0..1]\r\n    if (Red > Blue && Red > Green && Red > 1.0) { // Red is too big\r\n      Green = Green / Red;\r\n      Blue = Blue / Red;\r\n      Red = 1.0;\r\n    }\r\n    if (Red < 0) {\r\n      Red = 0;\r\n    }\r\n    if (Green > Blue && Green > Red && Green > 1.0) { // Green is too big\r\n      Red = Red / Green;\r\n      Blue = Blue / Green;\r\n      Green = 1.0;\r\n    }\r\n    if (Green < 0) {\r\n      Green = 0;\r\n    }\r\n    if (Blue > Red && Blue > Green && Blue > 1.0) { // Blue is too big\r\n      Red = Red / Blue;\r\n      Green = Green / Blue;\r\n      Blue = 1.0;\r\n    }\r\n    if (Blue < 0) {\r\n      Blue = 0;\r\n    }\r\n    return { Red: Red, Green: Green, Blue: Blue };\r\n  };\r\n\r\n  /**\r\n   * @param {float} x\r\n   * @param {float} y\r\n   * @param {float} Brightness Optional\r\n   * @param {string} Model - Modelname of the Light\r\n   * @returns {object} [Red, Green, Blue] - Ranges [0..1] [0..1] [0..1]\r\n   */\r\n  static HelperXYtoRGBforModel(x, y, Brightness, Model) {\r\n    let GamutCorrected = Huepi.HelperGamutXYforModel(x, y, Model);\r\n\r\n    return Huepi.HelperXYtoRGB(GamutCorrected.x, GamutCorrected.y, Brightness);\r\n  };\r\n\r\n  /**\r\n   * Tests if the Px,Py resides within the Gamut for the model.\r\n   * Otherwise it will calculated the closesed point on the Gamut.\r\n   * @param {float} Px - Range [0..1]\r\n   * @param {float} Py - Range [0..1]\r\n   * @param {string} Model - Modelname of the Light to Gamutcorrect Px, Py for\r\n   * @returns {object} [x, y] - Ranges [0..1] [0..1]\r\n   */\r\n  static HelperGamutXYforModel(Px, Py, Model) { // https://developers.meethue.com/documentation/supported-lights\r\n    Model = Model || 'LCT001'; // default hue Bulb 2012\r\n    let ModelType = Model.slice(0, 3);\r\n    let PRed, PGreen, PBlue;\r\n    let NormDot;\r\n\r\n    if (((ModelType === 'LST') || (ModelType === 'LLC')) &&\r\n      (Model !== 'LLC020') && (Model !== 'LLC002') && (Model !== 'LST002')) {\r\n    // For LivingColors Bloom, Aura and Iris etc the triangle corners are:\r\n      PRed = { x: 0.704, y: 0.296 }; // Gamut A\r\n      PGreen = { x: 0.2151, y: 0.7106 };\r\n      PBlue = { x: 0.138, y: 0.080 };\r\n    } else if (((ModelType === 'LCT') || (ModelType === 'LLM')) &&\r\n      (Model !== 'LCT010') && (Model !== 'LCT014') && (Model !== 'LCT011') && (Model !== 'LCT012')) {\r\n    // For the hue bulb and beyond led modules etc the corners of the triangle are:\r\n      PRed = { x: 0.675, y: 0.322 }; // Gamut B\r\n      PGreen = { x: 0.409, y: 0.518 };\r\n      PBlue = { x: 0.167, y: 0.040 };\r\n    } else { // Exceptions and Unknown default to\r\n      PRed = { x: 0.692, y: 0.308 }; // Gamut C\r\n      PGreen = { x: 0.17, y: 0.7 };\r\n      PBlue = { x: 0.153, y: 0.048 };\r\n    }\r\n\r\n    let VBR = { x: PRed.x - PBlue.x, y: PRed.y - PBlue.y }; // Blue to Red\r\n    let VRG = { x: PGreen.x - PRed.x, y: PGreen.y - PRed.y }; // Red to Green\r\n    let VGB = { x: PBlue.x - PGreen.x, y: PBlue.y - PGreen.y }; // Green to Blue\r\n\r\n    let GBR = (PGreen.x - PBlue.x) * VBR.y - (PGreen.y - PBlue.y) * VBR.x; // Sign Green on Blue to Red\r\n    let BRG = (PBlue.x - PRed.x) * VRG.y - (PBlue.y - PRed.y) * VRG.x; // Sign Blue on Red to Green\r\n    let RGB = (PRed.x - PGreen.x) * VGB.y - (PRed.y - PGreen.y) * VGB.x; // Sign Red on Green to Blue\r\n\r\n    let VBP = { x: Px - PBlue.x, y: Py - PBlue.y }; // Blue to Point\r\n    let VRP = { x: Px - PRed.x, y: Py - PRed.y }; // Red to Point\r\n    let VGP = { x: Px - PGreen.x, y: Py - PGreen.y }; // Green to Point\r\n\r\n    let PBR = VBP.x * VBR.y - VBP.y * VBR.x; // Sign Point on Blue to Red\r\n    let PRG = VRP.x * VRG.y - VRP.y * VRG.x; // Sign Point on Red to Green\r\n    let PGB = VGP.x * VGB.y - VGP.y * VGB.x; // Sign Point on Green to Blue\r\n\r\n    if ((GBR * PBR >= 0) && (BRG * PRG >= 0) && (RGB * PGB >= 0)) { // All Signs Match so Px,Py must be in triangle\r\n      return { x: Px, y: Py };\r\n    //  Outside Triangle, Find Closesed point on Edge or Pick Vertice...\r\n    } else if (GBR * PBR <= 0) { // Outside Blue to Red\r\n      NormDot = (VBP.x * VBR.x + VBP.y * VBR.y) / (VBR.x * VBR.x + VBR.y * VBR.y);\r\n      if ((NormDot >= 0.0) && (NormDot <= 1.0)) { // Within Edge\r\n        return { x: PBlue.x + NormDot * VBR.x, y: PBlue.y + NormDot * VBR.y };\r\n      } else if (NormDot < 0.0) { // Outside Edge, Pick Vertice\r\n        return { x: PBlue.x, y: PBlue.y }; // Start\r\n      }\r\n      return { x: PRed.x, y: PRed.y }; // End\r\n    } else if (BRG * PRG <= 0) { // Outside Red to Green\r\n      NormDot = (VRP.x * VRG.x + VRP.y * VRG.y) / (VRG.x * VRG.x + VRG.y * VRG.y);\r\n      if ((NormDot >= 0.0) && (NormDot <= 1.0)) { // Within Edge\r\n        return { x: PRed.x + NormDot * VRG.x, y: PRed.y + NormDot * VRG.y };\r\n      } else if (NormDot < 0.0) { // Outside Edge, Pick Vertice\r\n        return { x: PRed.x, y: PRed.y }; // Start\r\n      }\r\n      return { x: PGreen.x, y: PGreen.y }; // End\r\n    } else if (RGB * PGB <= 0) { // Outside Green to Blue\r\n      NormDot = (VGP.x * VGB.x + VGP.y * VGB.y) / (VGB.x * VGB.x + VGB.y * VGB.y);\r\n      if ((NormDot >= 0.0) && (NormDot <= 1.0)) { // Within Edge\r\n        return { x: PGreen.x + NormDot * VGB.x, y: PGreen.y + NormDot * VGB.y };\r\n      } else if (NormDot < 0.0) { // Outside Edge, Pick Vertice\r\n        return { x: PGreen.x, y: PGreen.y }; // Start\r\n      }\r\n      return { x: PBlue.x, y: PBlue.y }; // End\r\n    }\r\n    return { x: 0.5, y: 0.5 }; // Silence return warning\r\n  };\r\n\r\n  /**\r\n   * @param {float} Ang - Range [0..360]\r\n   * @param {float} Sat - Range [0..1]\r\n   * @param {float} Bri - Range [0..1]\r\n   * @returns {number} Temperature ranges [2200..6500]\r\n   */\r\n  static HelperHueAngSatBritoColortemperature(Ang, Sat, Bri) {\r\n    let RGB;\r\n\r\n    RGB = Huepi.HelperHueAngSatBritoRGB(Ang, Sat, Bri);\r\n    return Huepi.HelperRGBtoColortemperature(RGB.Red, RGB.Green, RGB.Blue);\r\n  };\r\n\r\n  /**\r\n   * @param {number} Temperature ranges [1000..6600]\r\n   * @returns {object} [Ang, Sat, Bri] - Ranges [0..360] [0..1] [0..1]\r\n   */\r\n  static HelperColortemperaturetoHueAngSatBri(Temperature) {\r\n    let RGB;\r\n\r\n    RGB = Huepi.HelperColortemperaturetoRGB(Temperature);\r\n    return Huepi.HelperRGBtoHueAngSatBri(RGB.Red, RGB.Green, RGB.Blue);\r\n  };\r\n\r\n  /**\r\n   * @param {float} x\r\n   * @param {float} y\r\n   * @param {float} Brightness Optional\r\n   * @returns {number} Temperature ranges [1000..6600]\r\n   */\r\n  static HelperXYtoColortemperature(x, y, Brightness) {\r\n    let RGB;\r\n\r\n    RGB = Huepi.HelperXYtoRGB(x, y, Brightness);\r\n    return Huepi.HelperRGBtoColortemperature(RGB.Red, RGB.Green, RGB.Blue);\r\n  };\r\n\r\n  /**\r\n   * @param {number} Temperature ranges [1000..6600]\r\n   * @returns {object} [x, y] - Ranges [0..1] [0..1]\r\n   */\r\n  static HelperColortemperaturetoXY(Temperature) {\r\n    let RGB;\r\n\r\n    RGB = Huepi.HelperColortemperaturetoRGB(Temperature);\r\n    return Huepi.HelperRGBtoXY(RGB.Red, RGB.Green, RGB.Blue);\r\n  };\r\n\r\n  /**\r\n   * @param {number} CT in Mired (micro reciprocal degree)\r\n   * @returns {number} ColorTemperature\r\n   */\r\n  static HelperCTtoColortemperature(CT) {\r\n    return Math.round(1000000 / CT);\r\n  };\r\n\r\n  /**\r\n   * @param {number} ColorTemperature\r\n   * @returns {number} CT in Mired (micro reciprocal degree)\r\n   */\r\n  static HelperColortemperaturetoCT(Temperature) {\r\n    return Math.round(1000000 / Temperature);\r\n  };\r\n\r\n  /**\r\n   * @param {multiple} Items - Items to convert to StringArray\r\n   * @returns {string} String array containing Items\r\n   */\r\n  static HelperToStringArray(Items) {\r\n    if (typeof Items === 'number') {\r\n      return '\"' + Items.toString() + '\"';\r\n    } else if (Object.prototype.toString.call(Items) === '[object Array]') {\r\n      let Result = '[';\r\n\r\n      for (let ItemNr = 0; ItemNr < Items.length; ItemNr++) {\r\n        Result += Huepi.HelperToStringArray(Items[ItemNr]);\r\n        if (ItemNr < Items.length - 1) {\r\n          Result += ',';\r\n        }\r\n      }\r\n      Result = Result + ']';\r\n      return Result;\r\n    } // else if (typeof Items === 'string') {\r\n    return '\"' + Items + '\"';\r\n  };\r\n\r\n  // //////////////////////////////////////////////////////////////////////////////\r\n  //\r\n  // Light Functions\r\n  //\r\n  //\r\n\r\n  /**\r\n   * @param {number} LightNr - LightNr\r\n   * @returns {string} LightId\r\n   */\r\n  LightGetId(LightNr) {\r\n    if (typeof LightNr === 'number') {\r\n      if (LightNr <= this.LightIds.length) {\r\n        return this.LightIds[LightNr - 1];\r\n      }\r\n    }\r\n    return LightNr;\r\n  };\r\n\r\n  /**\r\n   * @param {string} LightId - LightId\r\n   * @returns {number} LightNr\r\n   */\r\n  LightGetNr(LightId) {\r\n    if (typeof LightId === 'string') {\r\n      return this.LightIds.indexOf(LightId) + 1;\r\n    }\r\n    return LightId;\r\n  };\r\n\r\n  /**\r\n   */\r\n  LightsGetData() {\r\n  // GET /api/username/lights\r\n    return new Promise((resolve, reject) => {\r\n      fetch('http://' + this.BridgeIP + '/api/' + this.Username + '/lights').then((response) => {\r\n        return response.json();\r\n      }).then((data) => {\r\n        if (data) {\r\n          this.Lights = data;\r\n          this.LightIds = [];\r\n          for (let key in this.Lights) {\r\n            this.LightIds.push(key);\r\n          }\r\n          resolve(data);\r\n        } else {\r\n          reject(data);\r\n        }\r\n      }).catch(function (message) { // fetch failed\r\n        reject(message);\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   */\r\n  LightsSearchForNew() {\r\n  // POST /api/username/lights\r\n    return fetch('http://' + this.BridgeIP + '/api/' + this.Username + '/lights',\r\n      { method: 'POST' });\r\n  };\r\n\r\n  /**\r\n   */\r\n  LightsGetNew() {\r\n  // GET /api/username/lights/new\r\n    return fetch('http://' + this.BridgeIP + '/api/' + this.Username + '/lights/new');\r\n  };\r\n\r\n  /**\r\n   * @param {number} LightNr\r\n   * @param {string} Name New name of the light Range [1..32]\r\n   */\r\n  LightSetName(LightNr, Name) {\r\n  // PUT /api/username/lights\r\n    return fetch('http://' + this.BridgeIP + '/api/' + this.Username + '/lights/' + this.LightGetId(LightNr),\r\n      { method: 'PUT', body: '{\"name\" : \"' + Name + '\"}' });\r\n  };\r\n\r\n  /**\r\n   * @param {number} LightNr\r\n   * @param {HuepiLightstate} State\r\n   */\r\n  LightSetState(LightNr, State) {\r\n  // PUT /api/username/lights/[LightNr]/state\r\n    return fetch('http://' + this.BridgeIP + '/api/' + this.Username + '/lights/' + this.LightGetId(LightNr) + '/state',\r\n      { method: 'PUT', body: State.Get() });\r\n  };\r\n\r\n  /**\r\n   * @param {number} LightNr\r\n   * @param {number} Transitiontime optional\r\n   */\r\n  LightOn(LightNr, Transitiontime) {\r\n    let State;\r\n\r\n    State = new HuepiLightstate();\r\n    State.On();\r\n    State.SetTransitiontime(Transitiontime);\r\n    return this.LightSetState(LightNr, State);\r\n  };\r\n\r\n  /**\r\n   * @param {number} LightNr\r\n   * @param {number} Transitiontime optional\r\n   */\r\n  LightOff(LightNr, Transitiontime) {\r\n    let State;\r\n\r\n    State = new HuepiLightstate();\r\n    State.Off();\r\n    State.SetTransitiontime(Transitiontime);\r\n    return this.LightSetState(LightNr, State);\r\n  };\r\n\r\n  /**\r\n   * Sets Gamut Corrected values for HSB\r\n   * @param {number} LightNr\r\n   * @param {number} Hue Range [0..65535]\r\n   * @param {number} Saturation Range [0..255]\r\n   * @param {number} Brightness Range [0..255]\r\n   * @param {number} Transitiontime optional\r\n   */\r\n  LightSetHSB(LightNr, Hue, Saturation, Brightness, Transitiontime) {\r\n    let HueAng = Hue * 360 / 65535;\r\n    let Sat = Saturation / 255;\r\n    let Bri = Brightness / 255;\r\n\r\n    let Color = Huepi.HelperHueAngSatBritoRGB(HueAng, Sat, Bri);\r\n    let Point = Huepi.HelperRGBtoXY(Color.Red, Color.Green, Color.Blue);\r\n\r\n    return Promise.all([\r\n      this.LightSetBrightness(LightNr, Brightness, Transitiontime),\r\n      this.LightSetXY(LightNr, Point.x, Point.y, Transitiontime)\r\n    ]);\r\n  };\r\n\r\n  /**\r\n   * @param {number} LightNr\r\n   * @param {number} Hue Range [0..65535]\r\n   * @param {number} Transitiontime optional\r\n   */\r\n  LightSetHue(LightNr, Hue, Transitiontime) {\r\n    let State;\r\n\r\n    State = new HuepiLightstate();\r\n    State.SetHue(Hue);\r\n    State.SetTransitiontime(Transitiontime);\r\n    return this.LightSetState(LightNr, State);\r\n  };\r\n\r\n  /**\r\n   * @param {number} LightNr\r\n   * @param Saturation Range [0..255]\r\n   * @param {number} Transitiontime optional\r\n   */\r\n  LightSetSaturation(LightNr, Saturation, Transitiontime) {\r\n    let State;\r\n\r\n    State = new HuepiLightstate();\r\n    State.SetSaturation(Saturation);\r\n    State.SetTransitiontime(Transitiontime);\r\n    return this.LightSetState(LightNr, State);\r\n  };\r\n\r\n  /**\r\n   * @param {number} LightNr\r\n   * @param Brightness Range [0..255]\r\n   * @param {number} Transitiontime optional\r\n   */\r\n  LightSetBrightness(LightNr, Brightness, Transitiontime) {\r\n    let State;\r\n\r\n    State = new HuepiLightstate();\r\n    State.SetBrightness(Brightness);\r\n    State.SetTransitiontime(Transitiontime);\r\n    return this.LightSetState(LightNr, State);\r\n  };\r\n\r\n  /**\r\n   * @param {number} LightNr\r\n   * @param Ang Range [0..360]\r\n   * @param Sat Range [0..1]\r\n   * @param Bri Range [0..1]\r\n   * @param {number} Transitiontime optional\r\n   */\r\n  LightSetHueAngSatBri(LightNr, Ang, Sat, Bri, Transitiontime) {\r\n  // In: Hue in Deg, Saturation, Brightness 0.0-1.0 Transform To Philips Hue Range...\r\n    while (Ang < 0) {\r\n      Ang = Ang + 360;\r\n    }\r\n    Ang = Ang % 360;\r\n    return this.LightSetHSB(LightNr, Ang / 360 * 65535, Sat * 255, Bri * 255, Transitiontime);\r\n  };\r\n\r\n  /**\r\n   * @param {number} LightNr\r\n   * @param Red Range [0..1]\r\n   * @param Green Range [0..1]\r\n   * @param Blue Range [0..1]\r\n   * @param {number} Transitiontime optional\r\n   */\r\n  LightSetRGB(LightNr, Red, Green, Blue, Transitiontime) {\r\n    let Point = Huepi.HelperRGBtoXY(Red, Green, Blue);\r\n    let HueAngSatBri = Huepi.HelperRGBtoHueAngSatBri(Red, Green, Blue);\r\n\r\n    return Promise.all([\r\n      this.LightSetBrightness(LightNr, HueAngSatBri.Bri * 255),\r\n      this.LightSetXY(LightNr, Point.x, Point.y, Transitiontime)\r\n    ]);\r\n  };\r\n\r\n  /**\r\n   * @param {number} LightNr\r\n   * @param {number} CT micro reciprocal degree\r\n   * @param {number} Transitiontime optional\r\n   */\r\n  LightSetCT(LightNr, CT, Transitiontime) {\r\n    let Model = this.Lights[this.LightGetId(LightNr)].modelid;\r\n\r\n    if (Huepi.HelperModelCapableCT(Model)) {\r\n      let State;\r\n\r\n      State = new HuepiLightstate();\r\n      State.SetCT(CT);\r\n      State.SetTransitiontime(Transitiontime);\r\n      return this.LightSetState(LightNr, State);\r\n    } // else if (Huepi.HelperModelCapableXY(Model)) {\r\n    // hue CT Incapable Lights: CT->RGB->XY to ignore Brightness in RGB}\r\n    let Color = Huepi.HelperColortemperaturetoRGB(Huepi.HelperCTtoColortemperature(CT));\r\n    let Point = Huepi.HelperRGBtoXY(Color.Red, Color.Green, Color.Blue);\r\n\r\n    return this.LightSetXY(LightNr, Point.x, Point.y, Transitiontime);\r\n  };\r\n\r\n  /**\r\n   * @param {number} LightNr\r\n   * @param {number} Colortemperature Range [2200..6500] for the 2012 model\r\n   * @param {number} Transitiontime optional\r\n   */\r\n  LightSetColortemperature(LightNr, Colortemperature, Transitiontime) {\r\n    return this.LightSetCT(LightNr, Huepi.HelperColortemperaturetoCT(Colortemperature), Transitiontime);\r\n  };\r\n\r\n  /**\r\n   * @param {number} LightNr\r\n   * @param {float} X\r\n   * @param {float} Y\r\n   * @param {number} Transitiontime optional\r\n   */\r\n  LightSetXY(LightNr, X, Y, Transitiontime) {\r\n    let Model = this.Lights[this.LightGetId(LightNr)].modelid;\r\n\r\n    if (Huepi.HelperModelCapableXY(Model)) {\r\n      let State;\r\n\r\n      State = new HuepiLightstate();\r\n      let Gamuted = Huepi.HelperGamutXYforModel(X, Y, Model);\r\n\r\n      State.SetXY(Gamuted.x, Gamuted.y);\r\n      State.SetTransitiontime(Transitiontime);\r\n      return this.LightSetState(LightNr, State);\r\n    } // else if (Huepi.HelperModelCapableCT(Model)) {\r\n    // hue XY Incapable Lights: XY->RGB->CT to ignore Brightness in RGB\r\n    let Color = Huepi.HelperXYtoRGB(X, Y);\r\n    let Colortemperature = Huepi.HelperRGBtoColortemperature(Color.Red, Color.Green, Color.Blue);\r\n\r\n    return this.LightSetColortemperature(LightNr, Colortemperature, Transitiontime);\r\n  };\r\n\r\n  /**\r\n   * @param {number} LightNr\r\n   * @param {number} Transitiontime optional\r\n   */\r\n  LightAlertSelect(LightNr, Transitiontime) {\r\n    let State;\r\n\r\n    State = new HuepiLightstate();\r\n    State.AlertSelect();\r\n    State.SetTransitiontime(Transitiontime);\r\n    return this.LightSetState(LightNr, State);\r\n  };\r\n\r\n  /**\r\n   * @param {number} LightNr\r\n   * @param {number} Transitiontime optional\r\n   */\r\n  LightAlertLSelect(LightNr, Transitiontime) {\r\n    let State;\r\n\r\n    State = new HuepiLightstate();\r\n    State.AlertLSelect();\r\n    State.SetTransitiontime(Transitiontime);\r\n    return this.LightSetState(LightNr, State);\r\n  };\r\n\r\n  /**\r\n   * @param {number} LightNr\r\n   * @param {number} Transitiontime optional\r\n   */\r\n  LightAlertNone(LightNr, Transitiontime) {\r\n    let State;\r\n\r\n    State = new HuepiLightstate();\r\n    State.AlertNone();\r\n    State.SetTransitiontime(Transitiontime);\r\n    return this.LightSetState(LightNr, State);\r\n  };\r\n\r\n  /**\r\n   * @param {number} LightNr\r\n   * @param {number} Transitiontime optional\r\n   */\r\n  LightEffectColorloop(LightNr, Transitiontime) {\r\n    let State;\r\n\r\n    State = new HuepiLightstate();\r\n    State.EffectColorloop();\r\n    State.SetTransitiontime(Transitiontime);\r\n    return this.LightSetState(LightNr, State);\r\n  };\r\n\r\n  /**\r\n   * @param {number} LightNr\r\n   * @param {number} Transitiontime optional\r\n   */\r\n  LightEffectNone(LightNr, Transitiontime) {\r\n    let State;\r\n\r\n    State = new HuepiLightstate();\r\n    State.EffectNone();\r\n    State.SetTransitiontime(Transitiontime);\r\n    return this.LightSetState(LightNr, State);\r\n  };\r\n\r\n  // //////////////////////////////////////////////////////////////////////////////\r\n  //\r\n  // Group Functions\r\n  //\r\n  //\r\n\r\n  /**\r\n   * @param {number} GroupNr - GroupNr\r\n   * @returns {string} GroupId\r\n   */\r\n  GroupGetId(GroupNr) {\r\n    if (typeof GroupNr === 'number') {\r\n      if (GroupNr === 0) {\r\n        return '0';\r\n      } else if (GroupNr > 0) {\r\n        if (GroupNr <= this.GroupIds.length) {\r\n          return this.GroupIds[GroupNr - 1];\r\n        }\r\n      }\r\n    }\r\n    return GroupNr;\r\n  };\r\n\r\n  /**\r\n   * @param {string} GroupId - GroupId\r\n   * @returns {number} GroupNr\r\n   */\r\n  GroupGetNr(GroupId) {\r\n    if (typeof GroupId === 'string') {\r\n      return this.GroupIds.indexOf(GroupId) + 1;\r\n    }\r\n    return GroupId;\r\n  };\r\n\r\n  /**\r\n   */\r\n  GroupsGetData() {\r\n  // GET /api/username/groups\r\n    return new Promise((resolve, reject) => {\r\n      fetch('http://' + this.BridgeIP + '/api/' + this.Username + '/groups').then((response) => {\r\n        return response.json();\r\n      }).then((data) => {\r\n        if (data) {\r\n          this.Groups = data;\r\n          this.GroupIds = [];\r\n          for (let key in this.Groups) {\r\n            this.GroupIds.push(key);\r\n          }\r\n          resolve(data);\r\n        } else {\r\n          reject(data);\r\n        }\r\n      }).catch(function (message) { // fetch failed\r\n        reject(message);\r\n      });\r\n    });\r\n  };\r\n\r\n  /**\r\n   */\r\n  GroupsGetZero() {\r\n  // GET /api/username/groups/0\r\n    return new Promise((resolve, reject) => {\r\n      fetch('http://' + this.BridgeIP + '/api/' + this.Username + '/groups/0').then((response) => {\r\n        return response.json();\r\n      }).then((data) => {\r\n        if (data) {\r\n          this.Groups['0'] = data;\r\n          resolve(data);\r\n        } else {\r\n          reject(data);\r\n        }\r\n      }).catch(function (message) { // fetch failed\r\n        reject(message);\r\n      });\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Note: Bridge doesn't accept lights in a Group that are unreachable at moment of creation\r\n   * @param {string} Name New name of the light Range [1..32]\r\n   * @param {multiple} Lights LightNr or Array of Lights to Group\r\n   */\r\n  GroupCreate(Name, Lights) {\r\n  // POST /api/username/groups\r\n    return fetch('http://' + this.BridgeIP + '/api/' + this.Username +\r\n      '/groups/',\r\n      { method: 'POST', body: '{\"name\": \"' + Name + '\" , \"lights\":' + Huepi.HelperToStringArray(Lights) + '}' });\r\n  };\r\n\r\n  /**\r\n   * @param {number} GroupNr\r\n   * @param {string} Name New name of the light Range [1..32]\r\n   */\r\n  GroupSetName(GroupNr, Name) {\r\n  // PUT /api/username/groups/[GroupNr]\r\n    return fetch('http://' + this.BridgeIP + '/api/' + this.Username + '/groups/' + this.GroupGetId(GroupNr),\r\n      { method: 'PUT', body: '{\"name\": \"' + Name + '\"}' });\r\n  };\r\n\r\n  /**\r\n   * Note: Bridge doesn't accept lights in a Group that are unreachable at moment of creation\r\n   * @param {number} GroupNr\r\n   * @param {multiple} Lights LightNr or Array of Lights to Group\r\n   */\r\n  GroupSetLights(GroupNr, Lights) {\r\n  // PUT /api/username/groups/[GroupNr]\r\n    return fetch('http://' + this.BridgeIP + '/api/' + this.Username + '/groups/' + this.GroupGetId(GroupNr),\r\n      { method: 'PUT', body: '{\"lights\":' + Huepi.HelperToStringArray(Lights) + '}' });\r\n  };\r\n\r\n  /**\r\n   * Note: Bridge doesn't accept lights in a Group that are unreachable at moment of creation\r\n   * @param {number} GroupNr\r\n   * @param {string} Name New name of the light Range [1..32]\r\n   * @param {multiple} Lights LightNr or Array of Lights to Group\r\n   */\r\n  GroupSetAttributes(GroupNr, Name, Lights) {\r\n  // PUT /api/username/groups/[GroupNr]\r\n    return fetch('http://' + this.BridgeIP + '/api/' + this.Username + '/groups/' + this.GroupGetId(GroupNr),\r\n      { method: 'PUT', body: '{\"name\": \"' + Name + '\", \"lights\":' + Huepi.HelperToStringArray(Lights) + '}' });\r\n  };\r\n\r\n  /**\r\n   * @param {number} GroupNr\r\n   */\r\n  GroupDelete(GroupNr) {\r\n  // DELETE /api/username/groups/[GroupNr]\r\n    return fetch('http://' + this.BridgeIP + '/api/' + this.Username + '/groups/' + this.GroupGetId(GroupNr),\r\n      { method: 'DELETE' });\r\n  };\r\n\r\n  /**\r\n   * @param {number} GroupNr\r\n   * @param {HuepiLightstate} State\r\n   */\r\n  GroupSetState(GroupNr, State) {\r\n  // PUT /api/username/groups/[GroupNr]/action\r\n    return fetch('http://' + this.BridgeIP + '/api/' + this.Username + '/groups/' +\r\n     this.GroupGetId(GroupNr) + '/action',\r\n      { method: 'PUT', body: State.Get() });\r\n  };\r\n\r\n  /**\r\n   * @param {number} GroupNr\r\n   * @param {number} Transitiontime optional\r\n   */\r\n  GroupOn(GroupNr, Transitiontime) {\r\n    let State;\r\n\r\n    State = new HuepiLightstate();\r\n    State.On();\r\n    State.SetTransitiontime(Transitiontime);\r\n    return this.GroupSetState(GroupNr, State);\r\n  };\r\n\r\n  /**\r\n   * @param {number} GroupNr\r\n   * @param {number} Transitiontime optional\r\n   */\r\n  GroupOff(GroupNr, Transitiontime) {\r\n    let State;\r\n\r\n    State = new HuepiLightstate();\r\n    State.Off();\r\n    State.SetTransitiontime(Transitiontime);\r\n    return this.GroupSetState(GroupNr, State);\r\n  };\r\n\r\n  /**\r\n   * Sets Gamut Corrected values for HSB\r\n   * @param {number} GroupNr\r\n   * @param {number} Hue Range [0..65535]\r\n   * @param {number} Saturation Range [0..255]\r\n   * @param {number} Brightness Range [0..255]\r\n   * @param {number} Transitiontime optional\r\n   */\r\n  GroupSetHSB(GroupNr, Hue, Saturation, Brightness, Transitiontime) {\r\n    let Ang = Hue * 360 / 65535;\r\n    let Sat = Saturation / 255;\r\n    let Bri = Brightness / 255;\r\n\r\n    let Color = Huepi.HelperHueAngSatBritoRGB(Ang, Sat, Bri);\r\n    let Point = Huepi.HelperRGBtoXY(Color.Red, Color.Green, Color.Blue);\r\n\r\n    return Promise.all([\r\n      this.GroupSetBrightness(GroupNr, Brightness, Transitiontime),\r\n      this.GroupSetXY(GroupNr, Point.x, Point.y, Transitiontime)\r\n    ]);\r\n  };\r\n\r\n  /**\r\n   * @param {number} GroupNr\r\n   * @param {number} Hue Range [0..65535]\r\n   * @param {number} Transitiontime optional\r\n   */\r\n  GroupSetHue(GroupNr, Hue, Transitiontime) {\r\n    let State;\r\n\r\n    State = new HuepiLightstate();\r\n    State.SetHue(Hue);\r\n    State.SetTransitiontime(Transitiontime);\r\n    return this.GroupSetState(GroupNr, State);\r\n  };\r\n\r\n  /**\r\n   * @param {number} GroupNr\r\n   * @param Saturation Range [0..255]\r\n   * @param {number} Transitiontime optional\r\n   */\r\n  GroupSetSaturation(GroupNr, Saturation, Transitiontime) {\r\n    let State;\r\n\r\n    State = new HuepiLightstate();\r\n    State.SetSaturation(Saturation);\r\n    State.SetTransitiontime(Transitiontime);\r\n    return this.GroupSetState(GroupNr, State);\r\n  };\r\n\r\n  /**\r\n   * @param {number} GroupNr\r\n   * @param Brightness Range [0..255]\r\n   * @param {number} Transitiontime optional\r\n   */\r\n  GroupSetBrightness(GroupNr, Brightness, Transitiontime) {\r\n    let State;\r\n\r\n    State = new HuepiLightstate();\r\n    State.SetBrightness(Brightness);\r\n    State.SetTransitiontime(Transitiontime);\r\n    return this.GroupSetState(GroupNr, State);\r\n  };\r\n\r\n  /**\r\n   * @param {number} GroupNr\r\n   * @param Ang Range [0..360]\r\n   * @param Sat Range [0..1]\r\n   * @param Bri Range [0..1]\r\n   * @param {number} Transitiontime optional\r\n   */\r\n  GroupSetHueAngSatBri(GroupNr, Ang, Sat, Bri, Transitiontime) {\r\n    while (Ang < 0) {\r\n      Ang = Ang + 360;\r\n    }\r\n    Ang = Ang % 360;\r\n    return this.GroupSetHSB(GroupNr, Ang / 360 * 65535, Sat * 255, Bri * 255, Transitiontime);\r\n  };\r\n\r\n  /**\r\n   * @param {number} GroupNr\r\n   * @param Red Range [0..1]\r\n   * @param Green Range [0..1]\r\n   * @param Blue Range [0..1]\r\n   * @param {number} Transitiontime optional\r\n   */\r\n  GroupSetRGB(GroupNr, Red, Green, Blue, Transitiontime) {\r\n    let HueAngSatBri = Huepi.HelperRGBtoHueAngSatBri(Red, Green, Blue);\r\n\r\n    return this.GroupSetHueAngSatBri(GroupNr, HueAngSatBri.Ang, HueAngSatBri.Sat, HueAngSatBri.Bri, Transitiontime);\r\n  };\r\n\r\n  /**\r\n   * @param {number} GroupNr\r\n   * @param {number} CT micro reciprocal degree\r\n   * @param {number} Transitiontime optional\r\n   */\r\n  GroupSetCT(GroupNr, CT, Transitiontime) {\r\n    let Lights = [];\r\n\r\n    GroupNr = this.GroupGetId(GroupNr);\r\n    if (GroupNr === '0') { // All Lights\r\n      Lights = this.LightIds;\r\n    } else {\r\n      Lights = this.Groups[GroupNr].lights;\r\n    }\r\n\r\n    if (Lights.length !== 0) {\r\n      let deferreds = [];\r\n\r\n      for (let LightNr = 0; LightNr < Lights.length; LightNr++) {\r\n        deferreds.push(this.LightSetCT(Lights[LightNr], CT, Transitiontime));\r\n      }\r\n      return Promise.all(deferreds); // return Deferred when with array of deferreds\r\n    }\r\n    // No Lights in Group GroupNr, Set State of Group to let Bridge create the API Error and return it.\r\n    let State;\r\n\r\n    State = new HuepiLightstate();\r\n    State.SetCT(CT);\r\n    State.SetTransitiontime(Transitiontime);\r\n    return this.GroupSetState(GroupNr, State);\r\n  };\r\n\r\n  /**\r\n   * @param {number} GroupNr\r\n   * @param {number} Colortemperature Range [2200..6500] for the 2012 model\r\n   * @param {number} Transitiontime optional\r\n   */\r\n  GroupSetColortemperature(GroupNr, Colortemperature, Transitiontime) {\r\n    return this.GroupSetCT(GroupNr, Huepi.HelperColortemperaturetoCT(Colortemperature), Transitiontime);\r\n  };\r\n\r\n  /**\r\n   * @param {number} GroupNr\r\n   * @param {float} X\r\n   * @param {float} Y\r\n   * @param {number} Transitiontime optional\r\n   */\r\n  GroupSetXY(GroupNr, X, Y, Transitiontime) {\r\n    let Lights = [];\r\n\r\n    GroupNr = this.GroupGetId(GroupNr);\r\n    if (GroupNr === '0') { // All Lights\r\n      Lights = this.LightIds;\r\n    } else {\r\n      Lights = this.Groups[GroupNr].lights;\r\n    }\r\n\r\n    if (Lights.length !== 0) {\r\n      let deferreds = [];\r\n\r\n      for (let LightNr = 0; LightNr < Lights.length; LightNr++) {\r\n        deferreds.push(this.LightSetXY(Lights[LightNr], X, Y, Transitiontime));\r\n      }\r\n      return Promise.all(deferreds); // return Deferred when with array of deferreds\r\n    }\r\n    // No Lights in Group GroupNr, Set State of Group to let Bridge create the API Error and return it.\r\n    let State;\r\n\r\n    State = new HuepiLightstate();\r\n    State.SetXY(X, Y);\r\n    State.SetTransitiontime(Transitiontime);\r\n    return this.GroupSetState(GroupNr, State);\r\n  };\r\n\r\n  /**\r\n   * @param {number} GroupNr\r\n   * @param {number} Transitiontime optional\r\n   */\r\n  GroupAlertSelect(GroupNr, Transitiontime) {\r\n    let State;\r\n\r\n    State = new HuepiLightstate();\r\n    State.AlertSelect();\r\n    State.SetTransitiontime(Transitiontime);\r\n    return this.GroupSetState(GroupNr, State);\r\n  };\r\n\r\n  /**\r\n   * @param {number} GroupNr\r\n   * @param {number} Transitiontime optional\r\n   */\r\n  GroupAlertLSelect(GroupNr, Transitiontime) {\r\n    let State;\r\n\r\n    State = new HuepiLightstate();\r\n    State.AlertLSelect();\r\n    State.SetTransitiontime(Transitiontime);\r\n    return this.GroupSetState(GroupNr, State);\r\n  };\r\n\r\n  /**\r\n   * @param {number} GroupNr\r\n   * @param {number} Transitiontime optional\r\n   */\r\n  GroupAlertNone(GroupNr, Transitiontime) {\r\n    let State;\r\n\r\n    State = new HuepiLightstate();\r\n    State.AlertNone();\r\n    State.SetTransitiontime(Transitiontime);\r\n    return this.GroupSetState(GroupNr, State);\r\n  };\r\n\r\n  /**\r\n   * @param {number} GroupNr\r\n   * @param {number} Transitiontime optional\r\n   */\r\n  GroupEffectColorloop(GroupNr, Transitiontime) {\r\n    let State;\r\n\r\n    State = new HuepiLightstate();\r\n    State.EffectColorloop();\r\n    State.SetTransitiontime(Transitiontime);\r\n    return this.GroupSetState(GroupNr, State);\r\n  };\r\n\r\n  /**\r\n   * @param {number} GroupNr\r\n   * @param {number} Transitiontime optional\r\n   */\r\n  GroupEffectNone(GroupNr, Transitiontime) {\r\n    let State;\r\n\r\n    State = new HuepiLightstate();\r\n    State.EffectNone();\r\n    State.SetTransitiontime(Transitiontime);\r\n    return this.GroupSetState(GroupNr, State);\r\n  };\r\n\r\n  // //////////////////////////////////////////////////////////////////////////////\r\n  //\r\n  // Schedule Functions\r\n  //\r\n  //\r\n\r\n  /**\r\n   */\r\n  SchedulesGetData() {\r\n  // GET /api/username/schedules\r\n    return new Promise((resolve, reject) => {\r\n      fetch('http://' + this.BridgeIP + '/api/' + this.Username + '/schedules').then((response) => {\r\n        return response.json();\r\n      }).then((data) => {\r\n        if (data) {\r\n          this.Schedules = data;\r\n          resolve(data);\r\n        } else {\r\n          reject(data);\r\n        }\r\n      }).catch(function (message) { // fetch failed\r\n        reject(message);\r\n      });\r\n    });\r\n  };\r\n\r\n  // //////////////////////////////////////////////////////////////////////////////\r\n  //\r\n  // Scenes Functions\r\n  //\r\n  //\r\n\r\n  /**\r\n   */\r\n  ScenesGetData() {\r\n  // GET /api/username/scenes\r\n    return new Promise((resolve, reject) => {\r\n      fetch('http://' + this.BridgeIP + '/api/' + this.Username + '/scenes').then((response) => {\r\n        return response.json();\r\n      }).then((data) => {\r\n        if (data) {\r\n          this.Scenes = data;\r\n          resolve(data);\r\n        } else {\r\n          reject(data);\r\n        }\r\n      }).catch(function (message) { // fetch failed\r\n        reject(message);\r\n      });\r\n    });\r\n  };\r\n\r\n  // //////////////////////////////////////////////////////////////////////////////\r\n  //\r\n  // Sensors Functions\r\n  //\r\n  //\r\n\r\n  /**\r\n   */\r\n  SensorsGetData() {\r\n  // GET /api/username/sensors\r\n    return new Promise((resolve, reject) => {\r\n      fetch('http://' + this.BridgeIP + '/api/' + this.Username + '/sensors').then((response) => {\r\n        return response.json();\r\n      }).then((data) => {\r\n        if (data) {\r\n          this.Sensors = data;\r\n          resolve(data);\r\n        } else {\r\n          reject(data);\r\n        }\r\n      }).catch(function (message) { // fetch failed\r\n        reject(message);\r\n      });\r\n    });\r\n  };\r\n\r\n  // //////////////////////////////////////////////////////////////////////////////\r\n  //\r\n  // Rules Functions\r\n  //\r\n  //\r\n\r\n  /**\r\n   */\r\n  RulesGetData() {\r\n  // GET /api/username/rules\r\n    return new Promise((resolve, reject) => {\r\n      fetch('http://' + this.BridgeIP + '/api/' + this.Username + '/rules').then((response) => {\r\n        return response.json();\r\n      }).then((data) => {\r\n        if (data) {\r\n          this.Rules = data;\r\n          resolve(data);\r\n        } else {\r\n          reject(data);\r\n        }\r\n      }).catch(function (message) { // fetch failed\r\n        reject(message);\r\n      });\r\n    });\r\n  };\r\n\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/huepi.js","import HuepiLightState from './huepilightstate.js';\r\nimport Huepi from './huepi.js';\r\n\r\nexport { Huepi, HuepiLightState };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js"],"sourceRoot":""}